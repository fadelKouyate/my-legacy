{"version":3,"sources":["views/Tools/Message/Message.js","config/Message.js","api/TripApi.js","store/actions/TripActions.js","views/Trip/ShowTripDetail/ShowTripDetail.js"],"names":["Message","message","time","cogoToast","info","Object","assign","options","hideAfter","error","success","loadingtime","loading","warn","position","TripApi","cov_trip","url","API_URL","WS_CREATE_TRIP","cov_trip_string","JSON","stringify","cov_tirp_json","parse","axios","post","then","res","catch","console","log","WS_UPDATE_TRIP","bookValues","WS_BOOK_TRIP","book_trip_string","book_tirp_json","responseBody","WS_BOOKING_VALIDATION","data","WS_CANCEL_BOOKING","cancel_booking_string","cancel_booking_json","WS_CANCEL_TRIP","cancel_trip_string","cancel_trip_json","driverEmail","WS_READ_DRIVER_TRIPS","get","WS_READ_PASSENGER_TRIPS","trip_from","trip_to","trip_date","trip_place","WS_SEARCH_TRIP","TripActions","type","value","dispatch","types","updateLastAction","a","searchTrips","response","setTrips","ShowTripDetail","props","state","current_trip","current_trip_driver","trip_passengers","book","bind","login","goBack","this","history","push","LOGIN_BOOK_TRIP_PATH","val","charAt","toUpperCase","substr","trip_reference","reference","trip_passenger","cov_user","cov_mail","cov_trip_placeDesired","event","bookTrip","TRIP_BOOKING_INFO","match","params","cov_trips","filter","trip","map","setState","driver","passenger","setCurrentTrip","cov_current_trip","momentVariable","moment","startDate","strUpFirst","format","className","onClick","startCity","endCity","price","src","picture","fname","lname","registerDate","description","i","key","user","auth","logged","React","Component","connect"],"mappings":"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","file":"static/js/28.bb2fbae0.chunk.js","sourcesContent":["import cogoToast from 'cogo-toast';\r\nimport { MESSAGE_POSITION, HIDE_AFTER_DEFAULT, HIDE_AFTER_LOADING } from '../../../config/Message';\r\n\r\n\r\nclass Message {\r\n\r\n static options = { \r\n                  position: MESSAGE_POSITION,\r\n                  hideAfter: HIDE_AFTER_DEFAULT\r\n              }\r\n static info (message, time) {\r\n    return cogoToast.info(message, Object.assign(Message.options, { hideAfter:time }) )\r\n  }\r\n\r\n  static error (message, time) {\r\n    return cogoToast.error(message, Object.assign(Message.options, { hideAfter:time }) )\r\n  }\r\n\r\n  static success (message, time) {\r\n    return cogoToast.success(message, Object.assign(Message.options, { hideAfter:time }) )\r\n }\r\n\r\n  static loading (message, time) {\r\n    let loadingtime = time || HIDE_AFTER_LOADING\r\n    return cogoToast.loading(message, Object.assign(Message.options, { hideAfter:loadingtime }) )\r\n  }\r\n\r\n  static warn (message, time) {\r\n    return cogoToast.warn(message, Object.assign(Message.options, { hideAfter:time }) )\r\n  }\r\n\r\n}\r\n\r\nexport default Message\r\n","export const MESSAGE_POSITION = 'top-center' //top-left, top-center,top-right,bottom-left,bottom-left,bottom-right\r\nexport const HIDE_AFTER_DEFAULT = 3\r\nexport const HIDE_AFTER_LOADING = 1\r\n\r\n","import {API_URL, WS_CREATE_TRIP, WS_SEARCH_TRIP, WS_BOOK_TRIP, WS_READ_PASSENGER_TRIPS, \r\n\t    WS_READ_DRIVER_TRIPS, WS_BOOKING_VALIDATION, WS_CANCEL_BOOKING, WS_CANCEL_TRIP, WS_UPDATE_TRIP} from './url';\r\nimport axios from 'axios';\r\n\r\nclass TripApi{\r\n\r\n\tstatic createTrip(cov_trip) {\r\n\t\tlet url = API_URL + WS_CREATE_TRIP;\r\n\t\tlet cov_trip_string = JSON.stringify(cov_trip);\r\n\t\tlet cov_tirp_json = JSON.parse(cov_trip_string);\r\n\t\treturn axios.post(url, cov_tirp_json)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tconsole.log(\"Error lors de la creation du trajet\");\r\n\t\t\t\t\t\tthrow(error)\r\n\t\t\t\t\t});\r\n\t}\r\n\r\n\tstatic updateTrip(cov_trip) {\r\n\t\tlet url = API_URL + WS_UPDATE_TRIP;\r\n\t\tlet cov_trip_string = JSON.stringify(cov_trip);\r\n\t\tlet cov_tirp_json = JSON.parse(cov_trip_string);\r\n\t\treturn axios.post(url, cov_tirp_json)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tconsole.log(\"Error lors de la modification du trajet\");\r\n\t\t\t\t\t\tthrow(error)\r\n\t\t\t\t\t});\r\n\t}\r\n\r\n\tstatic bookTrip(bookValues){\r\n\t\tlet url = API_URL + WS_BOOK_TRIP; \r\n\t\tlet book_trip_string = JSON.stringify(bookValues);\r\n\t\tlet book_tirp_json = JSON.parse(book_trip_string);\r\n\t\treturn axios.post(url, book_tirp_json)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tconsole.log(\"Error lors de la reservation du trajet\");\r\n\t\t\t\t\t\tthrow(error)\r\n\t\t\t\t\t});\r\n\t}\r\n\r\n\tstatic async bookingValidation(responseBody){\r\n\t\tlet url = API_URL + WS_BOOKING_VALIDATION; \r\n\t\tlet book_trip_string = JSON.stringify(responseBody);\r\n\t\tlet book_tirp_json = JSON.parse(book_trip_string);\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(url, book_tirp_json);\r\n\t\t\treturn res;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"Error lors de la validation de la reservation du trajet\");\r\n\t\t\tthrow (error);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async cancelBooking(data){\r\n\t\tlet url = API_URL + WS_CANCEL_BOOKING;\r\n\t\tlet cancel_booking_string = JSON.stringify(data);\r\n\t\tlet cancel_booking_json = JSON.parse(cancel_booking_string);\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(url, cancel_booking_json);\r\n\t\t\treturn res;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"Error lors de l'annulation de la reservation\");\r\n\t\t\tthrow (error);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async cancelTrip(data) {\r\n\t\tlet url = API_URL + WS_CANCEL_TRIP;\r\n\t\tlet cancel_trip_string = JSON.stringify(data);\r\n\t\tlet cancel_trip_json = JSON.parse(cancel_trip_string);\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(url, cancel_trip_json);\r\n\t\t\treturn res;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"Error lors de l'annulation du trajet\");\r\n\t\t\tthrow (error);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async readDriverTrips(driverEmail){\r\n\t\t\tlet url = API_URL + WS_READ_DRIVER_TRIPS + \"?email=\" + driverEmail;\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await axios.get(url);\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t\tcatch (error) {\r\n\t\t\t\tconsole.log(\"erreur lors de la recherche de trajet\" + error);\r\n\t\t\t\tthrow (error);\r\n\t\t\t}\r\n\t}\r\n\r\n\tstatic async readPassengerTrips(driverEmail){\r\n\t\tlet url = API_URL + WS_READ_PASSENGER_TRIPS + \"?email=\" + driverEmail;\r\n\t\ttry {\r\n\t\t\tconst res = await axios.get(url);\r\n\t\t\treturn res;\r\n\t\t}\r\n\t\tcatch (error) {\r\n\t\t\tconsole.log(\"erreur lors de la recherche de trajet\" + error);\r\n\t\t\tthrow (error);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async searchTrips(trip_from, trip_to, trip_date, trip_place){\r\n\t\tlet url = API_URL + WS_SEARCH_TRIP + \"?trip_from=\" + trip_from + \"&trip_to=\" + trip_to \r\n\t\t\t\t\t\t  + \"&trip_date=\" + trip_date + \"&trip_place=\" + trip_place;\r\n\t\ttry {\r\n\t\t\tconst res = await axios.get(url);\r\n\t\t\treturn res;\r\n\t\t}\r\n\t\tcatch (error) {\r\n\t\t\tconsole.log(\"erreur lors de la recherche de trajet\" + error);\r\n\t\t\tthrow (error);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n  \r\nexport default TripApi;","import * as types from './actionTypes' \r\nimport TripApi from '../../api/TripApi'\r\n\r\nclass TripActions {\r\n\r\n      static updateLastAction() { \r\n        return {\r\n        type: 'UPDATE_LAST_ACTION'\r\n        }\r\n      }\r\n\r\n      static setTrips(value) { \r\n        return function (dispatch)  {\r\n          dispatch({ type: types.SET_TRIPS, value: value })\r\n          dispatch(TripActions.updateLastAction())\r\n        }\r\n      }\r\n\r\n      static setCurrentTrip(value){\r\n        return function(dispatch){\r\n          dispatch({ type: types.SET_CURRENT_TRIP, value: value});\r\n          dispatch(TripActions.updateLastAction());\r\n        }\r\n      }\r\n\r\n      static setTripDesiredPlace (value){\r\n        return function(dispatch){\r\n          dispatch({ type: types.SET_TRIP_DESIRED_PLACE, value: value});\r\n          dispatch(TripActions.updateLastAction());\r\n        }\r\n      }\r\n\r\n      static searchTrips(trip_from, trip_to, trip_date, trip_place){\r\n        return async function(dispatch){\r\n          try {\r\n            const response = await TripApi.searchTrips(trip_from, trip_to, trip_date, trip_place)\r\n            dispatch(TripActions.setTrips(response.data))\r\n          }\r\n          catch (error) {\r\n            throw (error)\r\n          }\r\n        }\r\n      }\r\n}\r\n\r\nexport default TripActions","import React from 'react';\r\nimport 'moment/locale/fr';\r\nimport moment from 'moment';\r\nimport './ShowTripDetail.css';\r\nimport { connect } from 'react-redux';\r\nimport TripApi from '../../../api/TripApi';\r\nimport {Button, Row, Col} from 'reactstrap';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Message from '../../Tools/Message/Message'\r\nimport TripActions from '../../../store/actions/TripActions';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport {LOGIN_BOOK_TRIP_PATH, TRIP_BOOKING_INFO} from '../../../config/paths';\r\n\r\n\r\nclass ShowTripDetail extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            current_trip : '',\r\n            current_trip_driver : '',\r\n            trip_passengers : [],\r\n        };\r\n\r\n        this.book  = this.book.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.goBack = this.goBack.bind(this);\r\n    }\r\n\r\n    login(){\r\n        this.props.history.push(LOGIN_BOOK_TRIP_PATH);\r\n    }\r\n\r\n    // convert first char to uppercase\r\n    strUpFirst(val){\r\n        return (val+'').charAt(0).toUpperCase()+val.substr(1);\r\n    }\r\n\r\n    bookValues(){\r\n        return {\r\n            trip_reference : this.state.current_trip.reference,\r\n\t        trip_passenger: this.props.cov_user.cov_mail,\r\n            trip_place: this.props.cov_trip_placeDesired,\r\n        }\r\n    }\r\n\r\n    book(event){\r\n        let bookValues = this.bookValues();\r\n        TripApi.bookTrip(bookValues)\r\n                .then((response) => {\r\n                    this.props.history.push(TRIP_BOOKING_INFO);\r\n                })\r\n                .catch(error => {\r\n                    Message.error('Erreur technique: veuillez rééssayer plus tard', 2)\r\n                    throw(error)\r\n                });\r\n    }\r\n\r\n    goBack(){\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    componentDidMount(){\r\n        let {trip_reference} = this.props.match.params;\r\n\r\n        if(trip_reference){\r\n            let trips = this.props.cov_trips;\r\n            trips.filter(trip => trip.reference === trip_reference)\r\n                .map((trip) => {\r\n                    this.setState({\r\n                        current_trip : trip,\r\n                        current_trip_driver : trip.driver,\r\n                        trip_passengers : trip.passenger\r\n                    });\r\n                    this.props.dispatch(TripActions.setCurrentTrip(trip));\r\n                }            \r\n            );\r\n        }else{ //access to this page after login\r\n           let current_trip = this.props.cov_current_trip;\r\n            this.setState({\r\n                current_trip : current_trip,\r\n                current_trip_driver : current_trip.driver\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let momentVariable = moment(this.state.current_trip.startDate, \"YYY-MM-DD\");\r\n        var startDate = this.strUpFirst(momentVariable.format(\"ddd DD MMM\"));\r\n        return( \r\n            <div className=\"trip-body container\">\r\n                <Row className=\"show-trip-detail-header\">\r\n                    <Col className=\"col-2 col-sm-4\">\r\n                        <ArrowBackIosIcon className=\"trip-back\" onClick={this.goBack}/> \r\n                    </Col>\r\n                    <Col className=\"trip-date col-10 col-sm-6\"><h1> {startDate} </h1></Col>\r\n                </Row>\r\n\r\n                <Row className=\"trip-from\">\r\n                        Depart : {this.state.current_trip.startCity}\r\n                </Row>\r\n                <Row className=\"trip-interval\"> </Row>\r\n                <Row className=\"trip-to\">\r\n                        Arrivée: {this.state.current_trip.endCity}\r\n                </Row>\r\n                <Row className=\"trip-space\"> </Row>\r\n\r\n                <Row className=\"trip-price\">\r\n                   <Col> Prix total pour un passager </Col> \r\n                   <Col className=\"trip-price-value\"> {this.state.current_trip.price} GNF</Col>\r\n                </Row>\r\n\r\n                <Row className=\"trip-space\"> </Row>\r\n\r\n                <Row className=\"trip-driver\">\r\n                    <Col className=\"col-2\"> \r\n                        <Avatar className=\"trip-driver-picture\"  src={this.state.current_trip_driver.picture}/>\r\n                    </Col>\r\n                    <Col className=\"col-8\">\r\n                        <span className=\"trip-driver-name\">\r\n                            {this.state.current_trip_driver.fname + \" \" + this.state.current_trip_driver.lname}\r\n                        </span> <br/>\r\n                        <span className=\"trip-driver-info\">\r\n                            Membre depuis <br/>\r\n                            {moment(this.state.current_trip_driver.registerDate, \"dd/MM/yyy HH:mm:ss\").format(\"d/MM/yyy\")}\r\n                        </span>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"trip-driver-description\">\r\n                    {this.state.current_trip.description}\r\n                </Row>\r\n                <Row className=\"trip-space\"> </Row>\r\n\r\n                <Row className=\"trip-passengers-title\"> Liste des passagers du trajet</Row>\r\n                 \r\n                <Row className=\"trip-passenger\">\r\n                    {this.state.trip_passengers.map((passenger, i) =>\r\n                        <Col key = {i} > \r\n                            <Avatar className=\"trip-passenger-picture\"  src={passenger.user.picture}/>\r\n                            <span className=\"trip-passenger-name\">\r\n                                {passenger.user.fname + \" \" + passenger.user.lname}\r\n                            </span> <br/>\r\n                        </Col>\r\n                    )}\r\n                </Row>\r\n\r\n                <Row className=\"trip-next\">\r\n                    <Button className=\"show_trip_detail_forme_btn\" onClick={this.book}\r\n                        onClick={this.props.auth.logged === true ? this.book : this.login} aria-pressed=\"true\" block \r\n                        color={this.props.auth.logged === true ? \"success\" : \"primary\"}>\r\n                        {this.props.auth.logged === true ? 'Reserver' : 'Se connecter'}\r\n                    </Button>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth,\r\n        cov_user: state.cov_user, \r\n        cov_current_trip: state.cov_current_trip,\r\n        cov_trips: state.cov_trips,\r\n        cov_trip_placeDesired: state.cov_trip_placeDesired\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(ShowTripDetail)\r\n"],"sourceRoot":""}