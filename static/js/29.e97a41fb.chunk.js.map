{"version":3,"sources":["store/actions/UserActions.js","config/paths.js","api/url.js","config/Register.js","utils/UserUtils.js","api/UserApi.js","utils/Security.js","config/Security.js","containers/DefaultLayout/HandleRoute.js","_nav.js","routes.js","containers/DefaultLayout/DefaultLayout.js"],"names":["UserActions","buffer","binary","slice","call","Uint8Array","forEach","b","String","fromCharCode","window","btoa","type","name","value","dispatch","types","updateLastAction","updateUserInfo","data","UserApi","checkMail","then","response","updateMail","catch","error","cov_user","createAccount","token","email","password","connect","tokenType","accessToken","readAccount","response2","user","UserUtils","mappingData","connectUserSuccess","updateAccount","updataUserSuccess","user_email","imagePreviewUrl","file","uploadPicture","updatePicture","cov_mail","cov_password","updatePassword","mail","forgotPassword","initPassword","validateAccount","pathname","DASHBOARD_PATH","THEME_PATH","THEME_TYPOGRAPHY_PATH","LOGIN_PATH","LOGIN_CREATE_TRIP_PATH","LOGIN_BOOK_TRIP_PATH","REGISTER_PATH","REGISTER_VALIDATE_PATH","PAGE_404_PATH","PAGE_500_PATH","PROFILE_INFOS_PATH","PROFILE_PASSWORD_FORGOT_PATH","PROFILE_PASSWORD_CHANGE_PATH","PROFILE_PASSWORD_INIT_PATH","PROFILE_DRIVER_TRIPS_PATH","PROFILE_PASSENGER_TRIPS_PATH","PROFILE_PICTURE_PATH","TRIP_SHOW_PATH","TRIP_SHOW_DETAIL_PATH","TRIP_SEARCH_PATH","TRIP_CREATE_PATH","TRIP_BOOKING_INFO","API_URL","WS_CONNECT","WS_READ_ACCOUNT","WS_UPDATE_ACCOUNT","WS_UPLOAD_PICTURE","WS_CHECK_EMAIL","WS_CREATE_ACCOUNT","WS_VALIDATE_ACCOUNT","WS_CHANGE_PASSWORD","WS_INIT_PASSWORD","WS_FORGOT_PASSWORD","WS_CREATE_TRIP","WS_UPDATE_TRIP","WS_SEARCH_TRIP","WS_BOOK_TRIP","WS_READ_DRIVER_TRIPS","WS_READ_PASSENGER_TRIPS","WS_BOOKING_VALIDATION","WS_CANCEL_BOOKING","WS_CANCEL_TRIP","Config","cov_first_name","fname","cov_last_name","lname","cov_birth","birth","cov_gender","gender","cov_phone","phone","cov_city","city","cov_picture","picture","cov_description","description","posError","config","regex","RegExp","resultat","test","message","errorMessage","errorStep","ms","Promise","resolve","setTimeout","console","log","JSON","parse","stringify","codeStatus","match","length","parseInt","trim","HttpStatus","INTERNAL_SERVER_ERROR","url","cov_user_string","cov_user_json","axios","post","res","headers","Authorization","formData","FormData","append","get","valid","accountStatus","OK","NOT_MODIFIED","cov_data","Security","action_date","last_action_date","moment","Date","now","diff","HandleRoute","props","state","this","setPathName","path","to","Component","items","icon","title","wrapper","element","attributes","class","Dashboard","React","lazy","Colors","Typography","ProfileInfos","Login","Page404","Page500","RegisterCreate","Home","ForgotPassword","ChangePassword","InitPassword","Picture","DriverTrips","PassengerTrips","RegisterValidate","SearchTrips","ShowAllTrips","CreateTrip","ShowTripDetail","BookingTripInfo","routes","exact","component","check","gotoAfter","DefaultFooter","DefaultHeader","DefaultLayout","refSetInterval","checkAccess","bind","className","logged","auth","isAccess","logout","timeTo","currentPage","location","sidebarClass","startsWith","fixed","fallback","loading","history","indexOf","display","navConfig","navigation","router","Container","fluid","map","route","idx","key","accessValue","typeAccess","render","from"],"mappings":"+JAIMA,E,4GAoGkBC,GAChB,IAAIC,EAAS,GAGb,MAFY,GAAGC,MAAMC,KAAK,IAAIC,WAAWJ,IACnCK,SAAQ,SAACC,GAAD,OAAOL,GAAUM,OAAOC,aAAaF,MAC5CG,OAAOC,KAAKT,M,0CArGnB,MAAO,CACPU,KAAM,wB,qCAIcC,EAAMC,GAC1B,OAAO,SAAUC,GACfA,EAAS,CAAEH,KAAMI,IAAwBH,KAAMA,EAAMC,MAAOA,IAC5DC,EAASf,EAAYiB,uB,iCAIPH,GAChB,OAAO,SAAUC,GAChBA,EAASf,EAAYkB,eAAe,WAAWJ,O,sCAI3BA,GACrB,OAAO,SAAUC,GACjBA,EAASf,EAAYkB,eAAe,iBAAiBJ,O,qCAIjCA,GAClB,OAAO,SAAUC,GACjBA,EAASf,EAAYkB,eAAe,gBAAgBJ,O,kCAIrCA,GACjB,OAAO,SAAUC,GACjBA,EAASf,EAAYkB,eAAe,YAAYJ,O,mCAI9BA,GAClB,OAAO,SAAUC,GACjBA,EAASf,EAAYkB,eAAe,aAAaJ,O,iCAIjCA,GAChB,OAAO,SAAUC,GACjBA,EAASf,EAAYkB,eAAe,WAAWJ,O,qCAI3BA,GACpB,OAAO,SAAUC,GACjBA,EAASf,EAAYkB,eAAe,eAAeJ,O,kCAIlCA,GACjB,OAAO,SAAUC,GACjBA,EAASf,EAAYkB,eAAe,YAAYJ,O,oCAI7BA,GACnB,OAAO,SAAUC,GACjBA,EAASf,EAAYkB,eAAe,cAAcJ,O,gCAInCK,GACf,OAAO,SAASJ,GACd,OAAOK,IAAQC,UAAUF,GACtBG,MAAK,SAAAC,GACJR,EAASf,EAAYwB,WAAWL,OAC/BM,OAAM,SAAAC,GACL,MAAMA,Q,+BAKAC,GACd,OAAO,SAASZ,GACd,OAAOK,IAAQQ,cAAcD,GAC1BL,MAAK,SAACC,GACLR,EAASf,EAAYiB,uBAEtBQ,OAAM,SAAAC,GACH,MAAMA,Q,yCAKUG,EAAOf,GAC/B,MAAO,CACLF,KAAMI,IACNF,MAAOA,EACPe,MAAOA,K,kCAWQC,EAAOC,GACxB,OAAO,SAAShB,GACd,IAAIY,EAAY,CAAE,UAAcG,EAAO,aAAiBC,GACxD,OAAOX,IAAQY,QAAQL,GACpBL,MAAK,SAAAC,GACJ,IAAIM,EAAQN,EAASJ,KAAKc,UAAY,IAAMV,EAASJ,KAAKe,YAC1D,OAAOd,IAAQe,YAAYL,EAAOD,GAC3BP,MAAK,SAAAc,GACF,IAAIC,EAAOC,IAAUC,YAAYH,EAAUjB,MAC3CJ,EAASf,EAAYwC,mBAAmBX,EAAOQ,IAC/CtB,EAASf,EAAYiB,uBACtBQ,OAAM,SAAAC,GACL,MAAMA,QAEfD,OAAM,SAAAC,GACL,MAAMA,Q,wCAKSZ,GACvB,MAAO,CACLF,KAAMI,IACNF,MAAOA,K,iCAIOa,EAAUE,GAC1B,OAAO,SAASd,GACd,OAAOK,IAAQqB,cAAcd,EAAUE,GACpCP,MAAK,SAAAC,GACFR,EAASf,EAAY0C,kBAAkBJ,IAAUC,YAAYhB,EAASJ,QACtEJ,EAASf,EAAYiB,uBACtBQ,OAAM,SAAAC,GACL,MAAMA,Q,oCAKKiB,EAAYC,EAAiBC,EAAMhB,GACtD,OAAO,SAASd,GACd,OAAOK,IAAQ0B,cAAcH,EAAYE,EAAMhB,GAC5CP,MAAK,SAAAC,GACFR,EAASf,EAAY+C,cAAcH,OACpCnB,OAAM,SAAAC,GACL,MAAMA,Q,yCAKUC,EAAUE,GAClC,OAAO,SAASd,GAChB,IAAII,EAAQ,CAAE,SAAaQ,EAASqB,SAAU,aAAiBrB,EAASsB,cACtE,OAAO7B,IAAQ8B,eAAe/B,EAAMU,GACjCP,MAAK,SAAAC,GAEF,OADAR,EAASf,EAAYiB,oBACdM,KACRE,OAAM,SAAAC,GACL,MAAMA,Q,+BAMd,MAAO,CACLd,KAAMI,O,qCAKYmC,GACpB,IAAIH,EAAW,CAAC,SAAYG,GAC5B,OAAO,SAASpC,GACd,OAAOK,IAAQgC,eAAeJ,GAC3B1B,MAAK,SAAAC,GAEJ,OADAR,EAASf,EAAYiB,oBACdM,KAERE,OAAM,SAAAC,GACH,MAAMA,Q,mCAIIC,EAAUE,GAC5B,IAAIV,EAAQ,CAAE,SAAaQ,EAASqB,SAAU,aAAiBrB,EAASsB,aAAc,MAAQpB,GAC9F,OAAO,SAASd,GACd,OAAOK,IAAQiC,aAAalC,GACzBG,MAAK,SAAAC,GAEJ,OADAR,EAASf,EAAYiB,oBACdM,KAERE,OAAM,SAAAC,GACH,MAAMA,Q,mCAKIC,GAClB,OAAO,SAASZ,GACd,OAAOK,IAAQkC,gBAAgB3B,GAC5BL,MAAK,SAACC,GACLR,EAASf,EAAYiB,uBAEtBQ,OAAM,SAAAC,GACH,MAAMA,Q,kCAKG6B,GACjB,MAAO,CACL3C,KAAMI,IACNF,MAAOyC,O,KAOFvD,O,iCCtOf,4uBAAO,IAAMwD,EAAiB,aACjBC,EAAa,SACbC,EAAwB,oBAEvBC,EAAa,SACbC,EAAyB,oBACzBC,EAAuB,mBAExBC,EAAgB,YAChBC,EAAwB,qBACxBC,EAAe,WACfC,EAAe,WAEfC,EAAoB,iBACpBC,EAA8B,2BAC9BC,EAA8B,2BAC9BC,EAA4B,yBAC5BC,EAA2B,wBAC3BC,EAA8B,2BAC9BC,EAAsB,mBAEtBC,EAAgB,aAChBC,EAAuB,oBACvBC,EAAmB,eACnBC,EAAmB,eACnBC,EAAoB,sB,iCCzBjC,wqBACO,IAAMC,EAAU,wBACVC,EAAa,mBACbC,EAAkB,uBAClBC,EAAoB,yBACpBC,EAAoB,8BACpBC,EAAiB,2BACjBC,EAAoB,8BACpBC,EAAsB,gCACtBC,EAAqB,0BACrBC,EAAmB,yBACnBC,EAAqB,+BAIrBC,EAAiB,gCACjBC,EAAiB,gCACjBC,EAAiB,gCACjBC,EAAe,8BACfC,EAAuB,sCACvBC,EAA0B,yCAC1BC,EAAwB,uCACxBC,EAAoB,mCACpBC,EAAiB,wC,uDCvBjBC,EAAS,CAClB,SAAY,CACR,MAAU,uBACV,aAAgB,kBAChB,MAAS,sBAEb,UAAa,CACT,MAAU,wBACV,aAAgB,uCAChB,MAAS,eAEb,UAAa,CACT,MAAU,4BACV,aAAgB,kDAChB,MAAS,qCAEb,aAAgB,CACZ,MAAU,uBACV,aAAgB,oDAChB,MAAS,eAEb,WAAc,CACV,MAAU,iBACV,aAAgB,kBAChB,MAAS,cAEb,UAAa,CACT,MAAU,uCACV,aAAgB,wDAChB,MAAS,kBAEb,SAAY,CACR,MAAU,gBACV,aAAgB,yBAChB,MAAS,iBChCX5D,E,yGAEiBnB,GACjB,MAAO,CACL6B,SAAW7B,EAAKW,MAChBqE,eAAiBhF,EAAKiF,MACtBC,cAAgBlF,EAAKmF,MACrBC,UAAYpF,EAAKqF,MACjBC,WAAatF,EAAKuF,OAClBC,UAAYxF,EAAKyF,MACjBC,SAAW1F,EAAK2F,KAChBC,YAAc5F,EAAK6F,QACnBC,gBAAkB9F,EAAK+F,e,iCAIVrG,EAAMC,GAAqB,IAAdqG,EAAa,wDAAH,EACpCC,EAASlB,EAAOrF,GAChBwG,EAAQ,IAAIC,OAAOF,EAAOC,OAC1BE,EAAWF,EAAMG,KAAK1G,GACtB2G,EAAUF,EAAW,GAAIH,EAAOM,aAChCC,EAAYJ,EAAW,GAAKJ,EAChC,MAAO,CAAEI,SAAUA,EAAUE,QAASA,EAASE,UAAWA,K,4BAI/CC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,IAAOF,U,KAK9CtF,O,+HC7BTlB,E,yGAEeM,GACjBsG,QAAQC,IAAI,8BAA+BvG,GACzC,IACI+F,EADYS,KAAKC,MAAMD,KAAKE,UAAU1G,IAChB+F,QAC1B,IACA,IAAIY,EAAaZ,EAAQa,MAAM,UAC/B,OAAID,GAAcA,EAAWE,OAAS,EAC7BC,SAASH,EAAW,GAAGI,QAEvBC,IAAWC,sBAEpB,MAAMjH,GACJ,OAAOgH,IAAWC,yB,oCAIHhH,GACnB,IAAIiH,EAAM9D,IAAUM,IAChByD,EAAkBX,KAAKE,UAAUzG,GACjCmH,EAAgBZ,KAAKC,MAAMU,GAC/B,OAAOE,IAAMC,KAAKJ,EAAKE,GACtBxH,MAAK,SAAA2H,GACJ,OAAOA,KAERxH,OAAM,SAAAC,GAEL,MADAsG,QAAQC,IAAIvG,GACNA,O,oCAIWC,EAAUE,GAC7B,IAAI+G,EAAM9D,IAAUG,IAChB4D,EAAkBX,KAAKE,UAAUzG,GACjCmH,EAAgBZ,KAAKC,MAAMU,GAC3BK,EAAU,CACZC,cAAe,UAAYtH,GAE7B,OAAOkH,IAAMC,KAAKJ,EAAKE,EAAe,CAACI,YACtC5H,MAAK,SAAA2H,GACJ,OAAOA,KAERxH,OAAM,SAAAC,GAEL,MADAsG,QAAQC,IAAIvG,GACNA,O,oCAIWiB,EAAYE,EAAMhB,GACrC,IAAI+G,EAAM9D,IAAUI,IAEdkE,EAAW,IAAIC,SACrBD,EAASE,OAAO,YAAa3G,GAC7ByG,EAASE,OAAO,cAAezG,GAE/B,IAAIqG,EAAU,CACZC,cAAe,UAAYtH,GAG7B,OAAOkH,IAAMC,KAAKJ,EAAKQ,EAAU,CAACF,YAC/B5H,MAAK,SAAA2H,GAEJ,OADAjB,QAAQC,IAAIgB,EAAI9H,MACT8H,KAERxH,OAAM,SAAAC,GAEL,MADAsG,QAAQC,IAAIvG,GACNA,O,sCAIWG,GACrB,IAAI+G,EAAM9D,IAAUO,IAAsB,UAAYxD,EACtD,OAAOkH,IAAMQ,IAAIX,GAChBtH,MAAK,SAAC2H,GACL,OAAOA,KAER3H,MAAK,SAACkI,GACH,MAAgC,UAA7BA,EAAMrI,KAAKsI,cACLf,IAAWgB,GACbhB,IAAWiB,gBAErBlI,OAAM,SAAAC,GAEL,MADAsG,QAAQC,IAAIvG,GACNA,O,yEAIaI,G,gFACf8G,EAAM9D,IAAUK,IAAiB,cAAgBrD,E,kBAE/BiH,IAAMQ,IAAIX,G,cAAtBK,E,yBACCA,G,sCAEPjB,QAAQC,IAAR,M,mJAKOtG,GACb,IAAIiH,EAAM9D,IAAUC,IAChB8D,EAAkBX,KAAKE,UAAUzG,GACjCmH,EAAgBZ,KAAKC,MAAMU,GAC/B,OAAOE,IAAMC,KAAKJ,EAAKE,GACtBxH,MAAK,SAAC2H,GACL,OAAOA,KAERxH,OAAM,SAAAC,GACL,MAAMA,O,kCAISI,EAAOD,GACxB,IAAI+G,EAAM9D,IAAUE,IAAkB,UAAYlD,EAC9CoH,EAAU,CACZC,cAAe,UAAYtH,GAE7B,OAAOkH,IAAMQ,IAAIX,EAAK,CAAEM,QAASA,IAChC5H,MAAK,SAAC2H,GACL,OAAOA,KAER3H,MAAK,SAACkI,GACD,MAAO,CAAE,OAAUd,IAAWgB,GAAI,KAASF,EAAMrI,SAEtDM,OAAM,SAAAC,GAEL,MADAsG,QAAQC,IAAIvG,GACNA,O,qCAIYC,EAAUE,GAC9B,IAAI+G,EAAM9D,IAAUQ,IAChBuD,EAAkBX,KAAKE,UAAUzG,GACjCmH,EAAgBZ,KAAKC,MAAMU,GAC3BK,EAAU,CACZC,cAAe,UAAYtH,GAE7B,OAAOkH,IAAMC,KAAKJ,EAAKE,EAAe,CAACI,YACtC5H,MAAK,SAAC2H,GACL,OAAOA,KAERxH,OAAM,SAAAC,GAEL,MADAsG,QAAQC,IAAIvG,GACNA,O,qCAIYsB,GACpB,IAAI4F,EAAM9D,IAAUU,IACpB,OAAOuD,IAAMC,KAAKJ,EAAK5F,GACtB1B,MAAK,SAAC2H,GACL,OAAOA,KAERxH,OAAM,SAAAC,GAEL,MADAsG,QAAQC,IAAIvG,GACNA,O,mCAKUkI,GAClB,IAAIhB,EAAM9D,IAAUS,IAChBsD,EAAkBX,KAAKE,UAAUwB,GACjCd,EAAgBZ,KAAKC,MAAMU,GAC/B,OAAOE,IAAMC,KAAKJ,EAAKE,GACtBxH,MAAK,SAAC2H,GACL,OAAOA,KAERxH,OAAM,SAAAC,GAEL,MADAsG,QAAQC,IAAIvG,GACNA,S,KAKGN,O,8JCtKAyI,E,sGATEC,GACb,IAAIC,EAAmBC,IAAOxB,SAASsB,EAAY,KAGnD,OAFeE,IAAQC,KAAKC,OACNC,KAAKJ,EAAiB,gBAAgB,ICPnB,Q,cCGvCK,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,iEAQhBvJ,EADkBwJ,KAAKF,MAAlBtJ,UACIf,IAAYwK,YAAYD,KAAKF,MAAMI,S,+BAI7C,OACE,kBAAC,IAAD,CAAUC,GAAK,e,GAfKC,aA0BX3I,eANS,SAACsI,GACvB,MAAO,CACH/G,SAAU+G,EAAM/G,YAIPvB,CAAyBoI,G,SC9BzB,GACbQ,MAAO,CACL,CACE/J,KAAM,aACN+H,IAAK,IACLiC,KAAM,aAER,CACEC,OAAO,EACPjK,KAAM,SACNkK,QAAS,CACPC,QAAS,GACTC,WAAY,IAEdC,MAAO,IAET,CACErK,KAAM,mBACN+H,IAAK,iBACLiC,KAAM,aAER,CACEhK,KAAM,QACN+H,IAAK,mBACLiC,KAAM,eAER,CACEhK,KAAM,cACN+H,IAAK,oBACLiC,KAAM,eAER,CACEC,OAAO,EACPjK,KAAM,cACNkK,QAAS,CACPC,QAAS,GACTC,WAAY,IAEdC,MAAO,IAET,CACErK,KAAM,qBACN+H,IAAK,wBACLiC,KAAM,aAER,CACEhK,KAAM,mBACN+H,IAAK,2BACLiC,KAAM,aAqBR,CACEC,OAAO,EACPjK,KAAM,oBACNkK,QAAS,CACPC,QAAS,GACTC,WAAY,IAEdC,MAAO,IAET,CACErK,KAAM,eACN+H,IAAK,2BACLiC,KAAM,aAER,CACEhK,KAAM,kBACN+H,IAAK,oBACLiC,KAAM,c,SC7ENM,EAAYC,IAAMC,MAAK,kBAAM,kCAC7BC,EAASF,IAAMC,MAAK,kBAAM,yDAC1BE,EAAaH,IAAMC,MAAK,kBAAM,kCAC9BG,EAAeJ,IAAMC,MAAK,kBAAM,yDAEhCI,EAAQL,IAAMC,MAAK,kBAAM,yDACzBK,EAAUN,IAAMC,MAAK,kBAAM,kCAC3BM,EAAUP,IAAMC,MAAK,kBAAM,kCAC3BO,EAAiBR,IAAMC,MAAK,kBAAM,sEAClCQ,EAAOT,IAAMC,MAAK,kBAAM,sEAExBS,EAAiBV,IAAMC,MAAK,kBAAM,gEAClCU,EAAiBX,IAAMC,MAAK,kBAAM,yDAClCW,EAAeZ,IAAMC,MAAK,kBAAM,yDAEhCY,EAAUb,IAAMC,MAAK,kBAAM,gEAC3Ba,EAAcd,IAAMC,MAAK,kBAAM,uEAC/Bc,EAAiBf,IAAMC,MAAK,kBAAM,+DAElCe,EAAmBhB,IAAMC,MAAK,kBAAM,kCACpCgB,EAAcjB,IAAMC,MAAK,kBAAM,+DAC/BiB,EAAelB,IAAMC,MAAK,kBAAM,wDAChCkB,EAAanB,IAAMC,MAAK,kBAAM,6EAC9BmB,EAAiBpB,IAAMC,MAAK,kBAAM,gEAClCoB,EAAkBrB,IAAMC,MAAK,kBAAM,+DAkC1BqB,EAhCA,CACb,CAAEjC,KAAM,IAAKkC,OAAO,EAAM9L,KAAM,OAAQ+L,UAAWf,GACnD,CAAEpB,KAAMjH,IAAgB3C,KAAM,YAAa+L,UAAWzB,GACtD,CAAEV,KAAMhH,IAAYkJ,OAAO,EAAM9L,KAAM,QAAS+L,UAAWtB,GAC3D,CAAEb,KAAM/G,IAAuB7C,KAAM,aAAc+L,UAAWrB,EAAYsB,OAAM,GAGhF,CAAEpC,KAAM7G,IAAwB/C,KAAM,QAAS+L,UAAWnB,EAAOqB,UAAU,eAC3E,CAAErC,KAAM5G,IAAsBhD,KAAM,QAAS+L,UAAWnB,EAAOqB,UAAU,aACzE,CAAErC,KAAM9G,IAAY9C,KAAM,QAAS+L,UAAWnB,EAAOoB,OAAM,EAAOC,UAAU,YAE5E,CAAErC,KAAM3G,IAAe6I,OAAO,EAAM9L,KAAM,SAAU+L,UAAWhB,EAAgBiB,OAAM,GACrF,CAAEpC,KAAM1G,IAAwBlD,KAAM,WAAY+L,UAAWR,EAAkBS,OAAM,GACrF,CAAEpC,KAAMzG,IAAenD,KAAM,UAAW+L,UAAWlB,GACnD,CAAEjB,KAAMxG,IAAepD,KAAM,aAAc+L,UAAWjB,GAEtD,CAAElB,KAAMvG,IAAqByI,OAAO,EAAM9L,KAAM,UAAW+L,UAAWpB,EAAcqB,OAAM,GAC1F,CAAEpC,KAAMtG,IAA+BwI,OAAO,EAAM9L,KAAM,SAAU+L,UAAWd,EAAgBe,OAAO,GACtG,CAAEpC,KAAMrG,IAA+BuI,OAAO,EAAM9L,KAAM,SAAU+L,UAAWb,EAAgBc,OAAO,GACtG,CAAEpC,KAAMpG,IAA6BsI,OAAO,EAAM9L,KAAM,OAAQ+L,UAAWZ,EAAca,OAAM,GAC/F,CAAEpC,KAAMnG,IAA4BqI,OAAO,EAAM9L,KAAM,cAAe+L,UAAWV,EAAaW,OAAM,GACpG,CAAEpC,KAAMlG,IAA+BoI,OAAO,EAAM9L,KAAM,iBAAkB+L,UAAWT,EAAgBU,OAAM,GAC7G,CAAEpC,KAAMjG,IAAsB3D,KAAM,UAAW+L,UAAWX,EAASY,OAAM,GAEzE,CAAEpC,KAAM9F,IAAkB9D,KAAM,aAAc+L,UAAWP,GACzD,CAAE5B,KAAMhG,IAAiB,8CAA+C5D,KAAM,eAAgB+L,UAAWN,GACzG,CAAE7B,KAAM/F,IAAwB,mBAAoB7D,KAAM,iBAAkB+L,UAAWJ,EAAgBK,OAAM,GAC7G,CAAEpC,KAAM/F,IAAuB7D,KAAM,iBAAkB+L,UAAWJ,EAAgBK,OAAM,GACxF,CAAEpC,KAAM7F,IAAkB/D,KAAM,aAAc+L,UAAWL,EAAYM,OAAM,GAC3E,CAAEpC,KAAM5F,IAAmBhE,KAAM,mBAAoB+L,UAAWH,EAAiBI,OAAM,ICvCnFE,EAAgB3B,IAAMC,MAAK,kBAAM,kCACjC2B,EAAgB5B,IAAMC,MAAK,kBAAM,+DAEjC4B,E,kDAEJ,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX4C,eAAiB,IAEnB,EAAKC,YAAY,EAAKA,YAAYC,KAAjB,gBALA,E,sDAShB,OAAO,yBAAKC,UAAU,oCAAf,gB,iCAGCC,EAAQT,GACjB,OAAIS,IAAoB,IAAVT,EACL,EAEDS,IAAoB,IAAVT,EAGT,EAFA,I,oCAMT,IAAIS,EAAS/C,KAAKF,MAAMkD,KAAKD,OAE3B,GADFtF,QAAQC,IAAI,aAAaqF,GACpBA,EAAQ,CACXtF,QAAQC,IAAI,kBADD,MAEqBsC,KAAKF,MAA/BtJ,EAFK,EAELA,SAAU+I,EAFL,EAEKA,YACDD,EAAS2D,SAAS1D,IAE/B/I,EAASf,IAAYyN,a,0CAQ1B,IAAIH,EAAS/C,KAAKF,MAAMkD,KAAKD,OACzBI,EAASlF,SJpE6B,KIqE1CR,QAAQC,IAAI,qBAAqBqF,EAAQ,IAAII,GAC1CJ,GAGH/C,KAAK4C,gB,+BAII,IAAD,OACHG,EAAS/C,KAAKF,MAAMkD,KAAKD,OACvBvM,EAAawJ,KAAKF,MAAlBtJ,SACF4M,EAAcpD,KAAKF,MAAMuD,SAASrK,SAClCsK,EAAeF,EAAYG,WAAW,YAAc,gBAAkB,iBAC1E,OACE,yBAAKT,UAAU,OACb,kBAAC,IAAD,CAAWU,OAAK,GACd,kBAAC,WAAD,CAAUC,SAAUzD,KAAK0D,WACvB,kBAACjB,EAAD,CAAeM,OAAQA,EAAQvM,SAAUA,EAAU4M,YAAaA,EAAaO,QAAS3D,KAAKF,MAAM6D,YAGrG,yBAAKb,UAAU,YAEXC,GAAWK,EAAYG,WAAW,cAAkD,IAAnCH,EAAYQ,QAAQ,YAAqD,IAAjCR,EAAYQ,QAAQ,QAE3G,kBAAC,IAAD,CAAYd,UAAWQ,EAAcO,QAAQ,MAC3C,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,WAAD,KACA,kBAAC,IAAD,CAAeC,UAAWC,EAAaC,OAAQA,KAE/C,kBAAC,IAAD,MACA,kBAAC,IAAD,OAGF,GAEJ,0BAAMlB,UAAU,QACd,kBAACmB,EAAA,EAAD,CAAWC,OAAK,GACd,kBAAC,WAAD,CAAUT,SAAUzD,KAAK0D,WACzB,kBAAC,IAAD,KACKvB,EAAOgC,KAAI,SAACC,EAAOC,GAClB,IAAKC,EAAM,CAACD,OACRE,EAAc,EAAKC,WAAWzB,EAAQqB,EAAM9B,OAChD,OAAuB,IAAhBiC,EACL,kBAAC,IAAD,CACED,IAAKD,EACLnE,KAAMkE,EAAMlE,KACZkC,MAAOgC,EAAMhC,MACb9L,KAAM8N,EAAM9N,KACZmO,OAAQ,SAAA3E,GAAK,OACX,kBAACsE,EAAM/B,UAAP,iBAAqBvC,EAArB,CAA4ByC,UAAW6B,EAAM7B,gBAGnC,IAAhBgC,EAAqB,kBAAC,EAAD,CAAaD,IAAKA,EAAKpE,KAAMkE,EAAMlE,OACrD,QAEF,kBAAC,IAAD,CAAUwE,KAAK,IAAIvE,GAAG,WAMnC,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUsD,SAAUzD,KAAK0D,WACvB,kBAAClB,EAAD,a,GA1GgBpC,aA0Hb3I,uBARS,SAACsI,GACvB,MAAO,CACHR,YAAaQ,EAAMR,YACnByD,KAAMjD,EAAMiD,KACZD,OAAQhD,EAAMiD,KAAKD,UAIVtL,CAAyBiL","file":"static/js/29.e97a41fb.chunk.js","sourcesContent":["import * as types from './actionTypes' \r\nimport UserApi from '../../api/UserApi'\r\nimport UserUtils from '../../utils/UserUtils'\r\n\r\nclass UserActions {\r\n\r\n      static updateLastAction() { \r\n        return {\r\n        type: 'UPDATE_LAST_ACTION'\r\n        }\r\n      }\r\n      \r\n      static updateUserInfo(name, value) { \r\n        return function (dispatch)  {\r\n          dispatch({ type: types.UPDATE_USER_INFO, name: name, value: value })\r\n          dispatch(UserActions.updateLastAction())\r\n        }\r\n      }\r\n  \r\n      static updateMail(value) { \r\n        return function (dispatch)  {\r\n         dispatch(UserActions.updateUserInfo('cov_mail',value))\r\n        }\r\n     }\r\n\r\n      static updateFirstName(value) { \r\n        return function (dispatch)  {\r\n        dispatch(UserActions.updateUserInfo('cov_first_name',value))\r\n        }\r\n      }\r\n\r\n      static updateLastName(value) { \r\n          return function (dispatch)  {\r\n          dispatch(UserActions.updateUserInfo('cov_last_name',value))\r\n          }\r\n      }\r\n\r\n      static updateBirth(value) { \r\n        return function (dispatch)  {\r\n        dispatch(UserActions.updateUserInfo('cov_birth',value))\r\n        }\r\n      }\r\n\r\n      static updateGender(value) { \r\n        return function (dispatch)  {\r\n        dispatch(UserActions.updateUserInfo('cov_gender',value))\r\n        }\r\n      }\r\n\r\n      static updateCity(value) { \r\n        return function (dispatch)  {\r\n        dispatch(UserActions.updateUserInfo('cov_city',value))\r\n        }\r\n      }\r\n\r\n      static updatePassword(value) { \r\n        return function (dispatch)  {\r\n        dispatch(UserActions.updateUserInfo('cov_password',value))\r\n        }\r\n      }\r\n\r\n      static updatePhone(value) { \r\n        return function (dispatch)  {\r\n        dispatch(UserActions.updateUserInfo('cov_phone',value))\r\n        }\r\n      }\r\n\r\n      static updatePicture(value) { \r\n        return function (dispatch)  {\r\n        dispatch(UserActions.updateUserInfo('cov_picture',value))\r\n        }\r\n      }\r\n\r\n      static checkMail(data) {  \r\n        return function(dispatch) {\r\n          return UserApi.checkMail(data)\r\n            .then(response => {\r\n              dispatch(UserActions.updateMail(data))\r\n            }).catch(error => {\r\n                throw(error)\r\n            })\r\n        }\r\n      }\r\n\r\n      static saveUser(cov_user) {  \r\n        return function(dispatch) {\r\n          return UserApi.createAccount(cov_user)\r\n            .then((response) => {\r\n              dispatch(UserActions.updateLastAction())\r\n            })\r\n            .catch(error => {\r\n                throw(error)\r\n            })\r\n        }\r\n      }\r\n\r\n      static connectUserSuccess(token, value) { \r\n        return {\r\n          type: types.CONNECT, \r\n          value: value,\r\n          token: token\r\n        }\r\n      }\r\n\r\n    arrayBufferToBase64(buffer) {\r\n        var binary = '';\r\n        var bytes = [].slice.call(new Uint8Array(buffer));\r\n        bytes.forEach((b) => binary += String.fromCharCode(b));\r\n        return window.btoa(binary);\r\n    };\r\n\r\n      static connectUser(email, password) {  \r\n        return function(dispatch) {\r\n          let cov_user  = { 'cov_email' : email, 'cov_password' : password }\r\n          return UserApi.connect(cov_user)\r\n            .then(response => {\r\n              let token = response.data.tokenType + ' ' + response.data.accessToken\r\n              return UserApi.readAccount(email, token)\r\n                    .then(response2 => {                           \r\n                        let user = UserUtils.mappingData(response2.data);\r\n                        dispatch(UserActions.connectUserSuccess(token, user));\r\n                        dispatch(UserActions.updateLastAction());\r\n                    }).catch(error => {\r\n                        throw(error)\r\n                    })\r\n            }).catch(error => {\r\n                throw(error)\r\n            })\r\n        }\r\n      }\r\n\r\n      static updataUserSuccess(value) { \r\n        return {\r\n          type: types.UPDATE_USER, \r\n          value: value\r\n        }\r\n      }\r\n\r\n      static updateUser(cov_user, token) {  \r\n        return function(dispatch) {\r\n          return UserApi.updateAccount(cov_user, token)\r\n            .then(response => {\r\n                dispatch(UserActions.updataUserSuccess(UserUtils.mappingData(response.data)))\r\n                dispatch(UserActions.updateLastAction())\r\n            }).catch(error => {\r\n                throw(error)\r\n            })\r\n        }\r\n      }\r\n\r\n      static uploadPicture(user_email, imagePreviewUrl, file, token){\r\n        return function(dispatch) {\r\n          return UserApi.uploadPicture(user_email, file, token)\r\n            .then(response => {\r\n                dispatch(UserActions.updatePicture(imagePreviewUrl));\r\n            }).catch(error => {\r\n                throw(error)\r\n            })\r\n        }\r\n      }\r\n\r\n      static updateUserPassword(cov_user, token) {   \r\n        return function(dispatch) {\r\n        let data  = { 'cov_mail' : cov_user.cov_mail, 'cov_password' : cov_user.cov_password }\r\n          return UserApi.updatePassword(data, token)\r\n            .then(response => {\r\n                dispatch(UserActions.updateLastAction())\r\n                return response\r\n            }).catch(error => {\r\n                throw(error)\r\n            })\r\n        }\r\n      }\r\n\r\n      static logout() { \r\n        return {\r\n          type: types.INIT_STATE\r\n        }\r\n       \r\n      }\r\n\r\n      static forgotPassword(mail) {  \r\n        let cov_mail = {'cov_mail': mail}\r\n        return function(dispatch) {\r\n          return UserApi.forgotPassword(cov_mail)\r\n            .then(response => {\r\n              dispatch(UserActions.updateLastAction())\r\n              return response\r\n            })\r\n            .catch(error => {\r\n                throw(error)\r\n            })\r\n        }\r\n      }\r\n      static initPassword(cov_user, token) {  \r\n        let data  = { 'cov_mail' : cov_user.cov_mail, 'cov_password' : cov_user.cov_password, 'token':token }\r\n        return function(dispatch) {\r\n          return UserApi.initPassword(data)\r\n            .then(response => {\r\n              dispatch(UserActions.updateLastAction())\r\n              return response\r\n            })\r\n            .catch(error => {\r\n                throw(error)\r\n            })\r\n        }\r\n      }\r\n\r\n      static validateUser(cov_user) {  \r\n        return function(dispatch) {\r\n          return UserApi.validateAccount(cov_user)\r\n            .then((response) => {\r\n              dispatch(UserActions.updateLastAction())\r\n            })\r\n            .catch(error => {\r\n                throw(error)\r\n            })\r\n        }\r\n      }\r\n\r\n      static setPathName(pathname) { \r\n        return {\r\n          type: types.SET_PATHNAME,\r\n          value: pathname\r\n        }\r\n       \r\n      }\r\n\r\n}\r\n\r\nexport default UserActions","export const DASHBOARD_PATH = '/dashboard'; \r\nexport const THEME_PATH = '/theme';\r\nexport const THEME_TYPOGRAPHY_PATH = '/theme/typography';\r\n\r\nexport const  LOGIN_PATH = '/login';\r\nexport const  LOGIN_CREATE_TRIP_PATH = '/login/createTrip';\r\nexport const  LOGIN_BOOK_TRIP_PATH = '/login/book_trip';\r\n\r\nexport const REGISTER_PATH = '/register';\r\nexport const REGISTER_VALIDATE_PATH= '/register/validate';\r\nexport const PAGE_404_PATH= '/page404';\r\nexport const PAGE_500_PATH= '/page500';\r\n\r\nexport const PROFILE_INFOS_PATH= '/profile/infos';\r\nexport const PROFILE_PASSWORD_FORGOT_PATH= '/profile/password/forgot';\r\nexport const PROFILE_PASSWORD_CHANGE_PATH= '/profile/password/change';\r\nexport const PROFILE_PASSWORD_INIT_PATH= '/profile/password/init';\r\nexport const PROFILE_DRIVER_TRIPS_PATH= '/profile/driver_trips';\r\nexport const PROFILE_PASSENGER_TRIPS_PATH= '/profile/passenger_trips';\r\nexport const PROFILE_PICTURE_PATH= '/profile/picture';\r\n\r\nexport const TRIP_SHOW_PATH= '/trip/show';\r\nexport const TRIP_SHOW_DETAIL_PATH= '/trip/show/detail';\r\nexport const TRIP_SEARCH_PATH = '/trip/search';\r\nexport const TRIP_CREATE_PATH = '/trip/create';\r\nexport const TRIP_BOOKING_INFO = '/trip/booking_info';\r\n\r\n","//USER\r\nexport const API_URL = 'http://localhost:8080';\r\nexport const WS_CONNECT = '/cov/auth/signin';\r\nexport const WS_READ_ACCOUNT = '/cov/ws_read_account';\r\nexport const WS_UPDATE_ACCOUNT = '/cov/ws_update_account';\r\nexport const WS_UPLOAD_PICTURE = '/cov/auth/ws_upload_picture';\r\nexport const WS_CHECK_EMAIL = '/cov/auth/ws_check_email';\r\nexport const WS_CREATE_ACCOUNT = '/cov/auth/ws_create_account';\r\nexport const WS_VALIDATE_ACCOUNT = '/cov/auth/ws_validate_account';\r\nexport const WS_CHANGE_PASSWORD = '/cov/ws_change_password';\r\nexport const WS_INIT_PASSWORD = '/cov/ws_reset_password';\r\nexport const WS_FORGOT_PASSWORD = '/cov/auth/ws_forgot_password';\r\n\r\n//TRIP\r\nexport const WS_SHOW_TRIP = '/cov/auth/trip/findAll';\r\nexport const WS_CREATE_TRIP = '/cov/auth/trip/ws_create_trip';\r\nexport const WS_UPDATE_TRIP = '/cov/auth/trip/ws_update_trip';\r\nexport const WS_SEARCH_TRIP = '/cov/auth/trip/ws_search_trip';\r\nexport const WS_BOOK_TRIP = '/cov/auth/trip/ws_book_trip';\r\nexport const WS_READ_DRIVER_TRIPS = '/cov/auth/trip/ws_read_driver_trips';\r\nexport const WS_READ_PASSENGER_TRIPS = '/cov/auth/trip/ws_read_passenger_trips';\r\nexport const WS_BOOKING_VALIDATION = '/cov/auth/trip/ws_booking_validation';\r\nexport const WS_CANCEL_BOOKING = '/cov/auth/trip/ws_cancel_booking';\r\nexport const WS_CANCEL_TRIP = '/cov/auth/trip/ws_cancel_driver_trip';","export const Config = {\r\n    \"cov_mail\": {\r\n        \"title\" : \"Votre adresse mail ?\",\r\n        \"errorMessage\": \"Email incorrect\",\r\n        \"regex\": \"^\\\\S+@\\\\S+\\\\.\\\\S+$\"\r\n    },\r\n    \"cov_names\": {\r\n        \"title\" : \"Votre prenom et nom ?\",\r\n        \"errorMessage\": \"Saisir entre 5 à 30 caractères\",\r\n        \"regex\": \"^(.{5,30})$\"\r\n    },\r\n    \"cov_birth\": {\r\n        \"title\" : \"Votre date de naissance ?\",\r\n        \"errorMessage\": \"Saisir la date de naissance ou ignorer le champ\",\r\n        \"regex\": \"|^[0-9]{4}[-][0-9]{2}[-][0-9]{2}$\"\r\n    },\r\n    \"cov_password\": {\r\n        \"title\" : \"Votre mot de passe ?\",\r\n        \"errorMessage\": \"Saisir un mot de passe de 5 à 30 caractères\",\r\n        \"regex\": \"^(.{5,30})$\"\r\n    },\r\n    \"cov_gender\": {\r\n        \"title\" : \"Vous êtes ?\",\r\n        \"errorMessage\": \"Faites un choix\",\r\n        \"regex\": \"^(.{1,1})$\"\r\n    },\r\n    \"cov_phone\": {\r\n        \"title\" : \"Votre numéro de téléphone ?\",\r\n        \"errorMessage\": \"Saisir un numéro de téléphone de 10 chiffres\",\r\n        \"regex\": \"^(\\\\d{10,10})$\"\r\n    },\r\n    \"cov_city\": {\r\n        \"title\" : \"Votre ville ?\",\r\n        \"errorMessage\": \"Saisir un nom de ville\",\r\n        \"regex\": \"^(.{1,100})$\"\r\n    },\r\n}\r\n\r\n\r\n\r\n","import { Config } from '../config/Register'\r\n\r\nclass UserUtils {\r\n    \r\n    static mappingData(data) {\r\n      return {\r\n        cov_mail : data.email,\r\n        cov_first_name : data.fname,\r\n        cov_last_name : data.lname,\r\n        cov_birth : data.birth,\r\n        cov_gender : data.gender,\r\n        cov_phone : data.phone,\r\n        cov_city : data.city,\r\n        cov_picture : data.picture, \r\n        cov_description : data.description\r\n      }\r\n    }\r\n        \r\n   static checkValue(name, value, posError=-1) {\r\n    let config = Config[name]\r\n    let regex = new RegExp(config.regex)\r\n    let resultat = regex.test(value)\r\n    let message = resultat ? '': config.errorMessage\r\n    let errorStep = resultat ? '' : posError\r\n    return { resultat: resultat, message: message, errorStep: errorStep }     \r\n\r\n  }\r\n\r\n  static sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, 1000 * ms));\r\n  }\r\n  \r\n}\r\n\r\nexport default UserUtils","import {API_URL, WS_CONNECT, WS_CREATE_ACCOUNT, WS_UPDATE_ACCOUNT,WS_UPLOAD_PICTURE, WS_READ_ACCOUNT, } from './url';\r\nimport {WS_VALIDATE_ACCOUNT, WS_CHECK_EMAIL, WS_CHANGE_PASSWORD, WS_INIT_PASSWORD, WS_FORGOT_PASSWORD} from './url';\r\nimport axios from 'axios';\r\nimport HttpStatus  from 'http-status-codes';\r\n\r\nclass UserApi {  \r\n\r\n  static handleError(error) {\r\n    console.log(\"Axios err donne la valeur: \", error)\r\n      let errorObject=JSON.parse(JSON.stringify(error));\r\n      let message = errorObject.message;\r\n      try{\r\n      var codeStatus = message.match('\\\\d{3}');\r\n      if (codeStatus && codeStatus.length > 0)\r\n        return parseInt(codeStatus[0].trim());\r\n      else\r\n        return HttpStatus.INTERNAL_SERVER_ERROR;\r\n      }\r\n      catch(error) {\r\n        return HttpStatus.INTERNAL_SERVER_ERROR;\r\n      }\r\n\r\n  }\r\n  static createAccount(cov_user) {\r\n    let url = API_URL + WS_CREATE_ACCOUNT\r\n    let cov_user_string = JSON.stringify(cov_user)\r\n    let cov_user_json = JSON.parse(cov_user_string);\r\n    return axios.post(url, cov_user_json)\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      throw(error)\r\n    });\r\n  }\r\n\r\n  static updateAccount(cov_user, token) {\r\n    let url = API_URL + WS_UPDATE_ACCOUNT\r\n    let cov_user_string = JSON.stringify(cov_user)\r\n    let cov_user_json = JSON.parse(cov_user_string)\r\n    let headers = {\r\n      Authorization: 'Bearer ' + token\r\n    }\r\n    return axios.post(url, cov_user_json, {headers})\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      throw(error)\r\n    });\r\n  }\r\n\r\n  static uploadPicture(user_email, file, token){\r\n    let url = API_URL + WS_UPLOAD_PICTURE;\r\n    \r\n    const formData = new FormData();\r\n    formData.append('cov_email', user_email);\r\n    formData.append('cov_picture', file);\r\n\r\n    let headers = {\r\n      Authorization: 'Bearer ' + token\r\n    }\r\n\r\n    return axios.post(url, formData, {headers})\r\n      .then(res => {\r\n        console.log(res.data);\r\n        return res;\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        throw(error)\r\n      });\r\n  }\r\n\r\n  static validateAccount(token) {\r\n    let url = API_URL + WS_VALIDATE_ACCOUNT + '?token=' + token;\r\n    return axios.get(url)\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .then((valid) => {\r\n        if(valid.data.accountStatus === \"VALID\") \r\n          return HttpStatus.OK;\r\n        return HttpStatus.NOT_MODIFIED;\r\n      })\r\n    .catch(error => {\r\n      console.log(error)\r\n      throw(error)\r\n    });\r\n  }\r\n  \r\n  static async checkMail(email) {\r\n      let url = API_URL + WS_CHECK_EMAIL + '?cov_email=' + email\r\n      try {\r\n          const res = await axios.get(url);\r\n          return res;\r\n      } catch (error) {\r\n          console.log(error);\r\n          throw (error);\r\n      }\r\n  }\r\n\r\n  static connect(cov_user) {\r\n    let url = API_URL + WS_CONNECT\r\n    let cov_user_string = JSON.stringify(cov_user)\r\n    let cov_user_json = JSON.parse(cov_user_string);\r\n    return axios.post(url, cov_user_json)\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      throw(error)\r\n    });\r\n  }\r\n\r\n  static readAccount(email, token) {\r\n    let url = API_URL + WS_READ_ACCOUNT + '?email=' + email\r\n    let headers = {\r\n      Authorization: 'Bearer ' + token\r\n    }\r\n    return axios.get(url, { headers: headers } )\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .then((valid) => {\r\n          return { 'status': HttpStatus.OK, 'data' : valid.data };\r\n      })\r\n    .catch(error => {\r\n      console.log(error)\r\n      throw(error)\r\n    });\r\n  }\r\n\r\n  static updatePassword(cov_user, token) {\r\n    let url = API_URL + WS_CHANGE_PASSWORD\r\n    let cov_user_string = JSON.stringify(cov_user)\r\n    let cov_user_json = JSON.parse(cov_user_string);\r\n    let headers = {\r\n      Authorization: 'Bearer ' + token\r\n    }\r\n    return axios.post(url, cov_user_json, {headers})\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      throw(error)\r\n    });\r\n  }\r\n\r\n  static forgotPassword(cov_mail) {\r\n    let url = API_URL + WS_FORGOT_PASSWORD\r\n    return axios.post(url, cov_mail)\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      throw(error)\r\n    });\r\n  }\r\n\r\n  \r\n  static initPassword(cov_data) {\r\n    let url = API_URL + WS_INIT_PASSWORD\r\n    let cov_user_string = JSON.stringify(cov_data)\r\n    let cov_user_json = JSON.parse(cov_user_string);\r\n    return axios.post(url, cov_user_json)\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      throw(error)\r\n    });\r\n  }\r\n\r\n}\r\nexport default UserApi;","import {AUTH_TOKEN_EXPIRATION_SECONDS} from '../config/Security'\r\nimport moment from 'moment'\r\n\r\nclass Security {\r\n    \r\n static isAccess(action_date) {   \r\n    let last_action_date = moment(parseInt(action_date,10))\r\n    let date_now = moment (Date.now())\r\n    let result = date_now.diff(last_action_date,'milliseconds')/1000\r\n    return result<AUTH_TOKEN_EXPIRATION_SECONDS\r\n }\r\n\r\n}\r\n\r\nexport default Security","//temps d'expiration du token en seconde\r\nexport const AUTH_TOKEN_EXPIRATION_SECONDS = 500    \r\n","import React, { Component } from 'react';\r\nimport UserActions from '../../store/actions/UserActions'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\nclass HandleRoute extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { dispatch } = this.props\r\n     dispatch(UserActions.setPathName(this.props.path))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Redirect to = \"/login\" />\r\n  )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      pathname: state.pathname\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps)(HandleRoute)\r\n","export default {\r\n  items: [\r\n    {\r\n      name: 'Mon compte',\r\n      url: '/',\r\n      icon: 'icon-user',\r\n    },\r\n    {\r\n      title: true,\r\n      name: 'Profil',\r\n      wrapper: {            // optional wrapper object\r\n        element: '',        // required valid HTML5 element tag\r\n        attributes: {}        // optional valid JS object with JS API naming ex: { className: \"my-class\", style: { fontFamily: \"Verdana\" }, id: \"my-id\"}\r\n      },\r\n      class: ''             // optional class names space delimited list for title item ex: \"text-center\"\r\n    },\r\n    {\r\n      name: 'Mes informations',\r\n      url: '/profile/infos',\r\n      icon: 'icon-drop',\r\n    },\r\n    {\r\n      name: 'Photo',\r\n      url: '/profile/picture',\r\n      icon: 'icon-camera',\r\n    },\r\n    {\r\n      name: 'Véhicule',\r\n      url: '/theme/typography',\r\n      icon: 'icon-pencil',\r\n    },\r\n    {\r\n      title: true,\r\n      name: 'Mes Trajets',\r\n      wrapper: {           \r\n        element: '',        \r\n        attributes: {}      \r\n      },\r\n      class: ''             \r\n    },\r\n    {\r\n      name: 'Je suis conducteur',\r\n      url: '/profile/driver_trips',\r\n      icon: 'icon-drop',\r\n    },\r\n    {\r\n      name: 'Je suis passager',\r\n      url: '/profile/passenger_trips',\r\n      icon: 'icon-drop',\r\n    },\r\n    /*{\r\n      title: true,\r\n      name: 'Avis',\r\n      wrapper: {            // optional wrapper object\r\n        element: '',        // required valid HTML5 element tag\r\n        attributes: {}        // optional valid JS object with JS API naming ex: { className: \"my-class\", style: { fontFamily: \"Verdana\" }, id: \"my-id\"}\r\n      },\r\n      class: ''             // optional class names space delimited list for title item ex: \"text-center\"\r\n    },\r\n    {\r\n      name: 'Avis reçus',\r\n      url: '/theme/typography',\r\n      icon: 'icon-envelope',\r\n    },\r\n    {\r\n      name: 'Avis laissés',\r\n      url: '/theme/typography',\r\n      icon: 'icon-envelope',\r\n    }, */\r\n    {\r\n      title: true,\r\n      name: 'Préférences',\r\n      wrapper: {            // optional wrapper object\r\n        element: '',        // required valid HTML5 element tag\r\n        attributes: {}        // optional valid JS object with JS API naming ex: { className: \"my-class\", style: { fontFamily: \"Verdana\" }, id: \"my-id\"}\r\n      },\r\n      class: ''             // optional class names space delimited list for title item ex: \"text-center\"\r\n    },\r\n    {\r\n      name: 'Mot de passe',\r\n      url: '/profile/password/change',\r\n      icon: 'icon-lock',\r\n    },\r\n    {\r\n      name: 'Vérification',\r\n      url: '/theme/typography',\r\n      icon: 'icon-eye',\r\n    }\r\n  ],\r\n};\r\n","import React from 'react';\r\nimport {DASHBOARD_PATH, THEME_PATH, THEME_TYPOGRAPHY_PATH, REGISTER_PATH, PAGE_404_PATH,\r\n        LOGIN_PATH, LOGIN_CREATE_TRIP_PATH, LOGIN_BOOK_TRIP_PATH, REGISTER_VALIDATE_PATH,\r\n        PROFILE_INFOS_PATH, PROFILE_PASSWORD_FORGOT_PATH, PROFILE_PASSWORD_CHANGE_PATH,\r\n        PROFILE_PASSWORD_INIT_PATH, PROFILE_DRIVER_TRIPS_PATH, PROFILE_PASSENGER_TRIPS_PATH,\r\n        PROFILE_PICTURE_PATH, TRIP_SEARCH_PATH, TRIP_SHOW_PATH, TRIP_CREATE_PATH, PAGE_500_PATH,\r\n        TRIP_SHOW_DETAIL_PATH, TRIP_BOOKING_INFO\r\n       } from './config/paths';\r\n\r\nconst Dashboard = React.lazy(() => import('./views/Dashboard'));\r\nconst Colors = React.lazy(() => import('./views/Dashboard/Theme/Colors/Colors'));\r\nconst Typography = React.lazy(() => import('./views/Dashboard/Theme/Typography/Typography'));\r\nconst ProfileInfos = React.lazy(() => import('./views/Profile/Base'));\r\n\r\nconst Login = React.lazy(() => import('./views/Login/Login'));\r\nconst Page404 = React.lazy(() => import('./views/Tools/Pages/Page404'));\r\nconst Page500 = React.lazy(() => import('./views/Tools/Pages/Page500'));\r\nconst RegisterCreate = React.lazy(() => import('./views/Register/Create'));\r\nconst Home = React.lazy(() => import('./views/Home/Home'));\r\n\r\nconst ForgotPassword = React.lazy(() => import('./views/Profile/Password/Forgot'));\r\nconst ChangePassword = React.lazy(() => import('./views/Profile/Password/Change'));\r\nconst InitPassword = React.lazy(() => import('./views/Profile/Password/Init'));\r\n\r\nconst Picture = React.lazy(() => import ('./views/Profile/Picture'));\r\nconst DriverTrips = React.lazy(() => import ('./views/Profile/DriverTrips/DriverTrips'));\r\nconst PassengerTrips = React.lazy(() => import ('./views/Profile/PassengerTrips/PassengerTrips'));\r\n\r\nconst RegisterValidate = React.lazy(() => import('./views/Register/Validate'));\r\nconst SearchTrips = React.lazy(() => import('./views/Trip/SearchTrips/SearchTrips'));\r\nconst ShowAllTrips = React.lazy(() => import('./views/Trip/ShowAllTrips/ShowAllTrips'));\r\nconst CreateTrip = React.lazy(() => import('./views/Trip/CreateTrip/CreateTrip'));\r\nconst ShowTripDetail = React.lazy(() => import('./views/Trip/ShowTripDetail/ShowTripDetail'));\r\nconst BookingTripInfo = React.lazy(() => import('./views/Trip/BookingTripInfo/BookingTripInfo'));\r\n\r\nconst routes = [\r\n  { path: '/', exact: true, name: 'Home', component: Home},\r\n  { path: DASHBOARD_PATH, name: 'Dashboard', component: Dashboard },\r\n  { path: THEME_PATH, exact: true, name: 'Theme', component: Colors },\r\n  { path: THEME_TYPOGRAPHY_PATH, name: 'Typography', component: Typography, check:true },\r\n  \r\n  \r\n  { path: LOGIN_CREATE_TRIP_PATH, name: 'Login', component: Login, gotoAfter:\"CREATE_TRIP\" },\r\n  { path: LOGIN_BOOK_TRIP_PATH, name: 'Login', component: Login, gotoAfter:\"BOOK_TRIP\" },\r\n  { path: LOGIN_PATH, name: 'Login', component: Login, check:false, gotoAfter:\"DASHBORD\" },\r\n\r\n  { path: REGISTER_PATH, exact: true, name: 'Create', component: RegisterCreate, check:false },\r\n  { path: REGISTER_VALIDATE_PATH, name: 'Register', component: RegisterValidate, check:false },\r\n  { path: PAGE_404_PATH, name: 'Page404', component: Page404 },\r\n  { path: PAGE_500_PATH, name: 'Typography', component: Page500 },\r\n\r\n  { path: PROFILE_INFOS_PATH,  exact: true, name: 'Profile', component: ProfileInfos, check:true },\r\n  { path: PROFILE_PASSWORD_FORGOT_PATH,  exact: true, name: 'Forgot', component: ForgotPassword, check: false},\r\n  { path: PROFILE_PASSWORD_CHANGE_PATH,  exact: true, name: 'Change', component: ChangePassword, check: true },\r\n  { path: PROFILE_PASSWORD_INIT_PATH,  exact: true, name: 'Init', component: InitPassword, check:false },\r\n  { path: PROFILE_DRIVER_TRIPS_PATH,  exact: true, name: 'driverTrips', component: DriverTrips, check:true },\r\n  { path: PROFILE_PASSENGER_TRIPS_PATH,  exact: true, name: 'passengerTrips', component: PassengerTrips, check:true },\r\n  { path: PROFILE_PICTURE_PATH, name: 'Picture', component: Picture, check:true },\r\n\r\n  { path: TRIP_SEARCH_PATH, name: 'SearchTrip', component: SearchTrips},\r\n  { path: TRIP_SHOW_PATH + '/:trip_from/:trip_to/:trip_date/:trip_place', name: 'ShowAllTrips', component: ShowAllTrips},\r\n  { path: TRIP_SHOW_DETAIL_PATH + '/:trip_reference', name: 'ShowTripDetail', component: ShowTripDetail, check:false},\r\n  { path: TRIP_SHOW_DETAIL_PATH, name: 'ShowTripDetail', component: ShowTripDetail, check:true},\r\n  { path: TRIP_CREATE_PATH, name: 'CreateTrip', component: CreateTrip, check:true},\r\n  { path: TRIP_BOOKING_INFO, name: '/BookingTripInfo', component: BookingTripInfo, check:true}\r\n];\r\n\r\nexport default routes;\r\n","import React, { Component, Suspense } from 'react';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport * as router from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport { connect } from 'react-redux'\r\nimport Security from '../../utils/Security'\r\nimport UserActions from '../../store/actions/UserActions'\r\nimport HandleRoute from './HandleRoute'\r\nimport { AUTH_TOKEN_EXPIRATION_SECONDS } from '../../config/Security'\r\n\r\nimport {\r\n  AppFooter,\r\n  AppHeader,\r\n  AppSidebar,\r\n  AppSidebarFooter,\r\n  AppSidebarForm,\r\n  AppSidebarHeader,\r\n  AppSidebarMinimizer,\r\n  AppSidebarNav2 as AppSidebarNav,\r\n} from '@coreui/react';\r\n// sidebar nav config\r\nimport navigation from '../../_nav';\r\n// routes config\r\nimport routes from '../../routes';\r\n\r\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\r\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\r\n\r\nclass DefaultLayout extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      refSetInterval : ''\r\n    }\r\n    this.checkAccess=this.checkAccess.bind(this)\r\n  }\r\n\r\n  loading () {\r\n     return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n  }\r\n\r\n  typeAccess(logged, check) {\r\n    if( logged && check === false) \r\n      return 0;\r\n   \r\n      if (! logged && check === true)\r\n      return 1\r\n   \r\n      return 2\r\n  }\r\n\r\n  checkAccess() {\r\n    let logged = this.props.auth.logged\r\n    console.log(\"log donne \",logged)\r\n      if(logged) {\r\n      console.log(\"i am in access\")\r\n      let { dispatch, action_date } = this.props\r\n      let isAccess = Security.isAccess(action_date)\r\n      if(! isAccess) {\r\n        dispatch(UserActions.logout())\r\n        //clearInterval(this.state.refSetInterval)\r\n        //window.location.reload()\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n   let logged = this.props.auth.logged\r\n   let timeTo = parseInt(AUTH_TOKEN_EXPIRATION_SECONDS)\r\n   console.log(\"log donne , timeTo\",logged, \" \",timeTo)\r\n   if(logged) {\r\n   //let ref = setInterval(this.checkAccess,  timeTo * 1000)\r\n   // this.setState({ refSetInterval: ref})\r\n   this.checkAccess()\r\n   }\r\n  }\r\n\r\n  render() {\r\n    let logged = this.props.auth.logged\r\n    let { dispatch } = this.props\r\n    let currentPage = this.props.location.pathname\r\n    let sidebarClass = currentPage.startsWith(\"/profile\") ? 'sidebar-fixed' : 'sidebar-hidden'\r\n    return (\r\n      <div className=\"app\">\r\n        <AppHeader fixed>\r\n          <Suspense fallback={this.loading()}>\r\n            <DefaultHeader logged={logged} dispatch={dispatch} currentPage={currentPage} history={this.props.history}/>\r\n          </Suspense>\r\n        </AppHeader>\r\n        <div className=\"app-body\">\r\n          {\r\n            logged && (currentPage.startsWith(\"/profile\") && currentPage.indexOf(\"forgot\") === -1 && currentPage.indexOf(\"init\") === -1)\r\n            ?\r\n              <AppSidebar className={sidebarClass} display=\"lg\">\r\n                <AppSidebarHeader />\r\n                <AppSidebarForm />\r\n                <Suspense>\r\n                <AppSidebarNav navConfig={navigation}  router={router}/>\r\n                </Suspense>\r\n                <AppSidebarFooter />\r\n                <AppSidebarMinimizer />\r\n              </AppSidebar> \r\n              :\r\n              ''\r\n          }\r\n          <main className=\"main\">\r\n            <Container fluid>\r\n              <Suspense fallback={this.loading()}>\r\n              <Switch>\r\n                  {routes.map((route, idx) => {\r\n                    let  key = {idx}\r\n                    let accessValue = this.typeAccess(logged, route.check)\r\n                    return accessValue === 2 ? (\r\n                      <Route\r\n                        key={idx}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        name={route.name}\r\n                        render={props => (\r\n                          <route.component {...props} gotoAfter={route.gotoAfter}/>\r\n                        )} />\r\n                    ) :\r\n                    accessValue === 1  ? <HandleRoute key={key} path={route.path} />: \r\n                      (null);\r\n                  })}\r\n                   { <Redirect from=\"/\" to=\"/\" /> }\r\n                </Switch>\r\n              </Suspense>\r\n            </Container>\r\n          </main>\r\n        </div>\r\n        <AppFooter>\r\n          <Suspense fallback={this.loading()}>\r\n            <DefaultFooter />\r\n          </Suspense>\r\n        </AppFooter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      action_date: state.action_date,\r\n      auth: state.auth,\r\n      logged: state.auth.logged\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps)(DefaultLayout)"],"sourceRoot":""}