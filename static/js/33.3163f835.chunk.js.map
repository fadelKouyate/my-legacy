{"version":3,"sources":["views/Tools/Message/Message.js","config/Message.js","assets/img/Capture.PNG","views/Profile/Picture/Picture.js","config/Picture.js"],"names":["Message","message","time","cogoToast","info","Object","assign","options","hideAfter","error","success","loadingtime","loading","warn","position","module","exports","Picture","props","state","file","imagePreviewUrl","handleSubmit","bind","handleChange","sizeMax","type","size","result","startsWith","parseInt","dispatch","this","UserActions","uploadPicture","cov_user","cov_mail","token","then","window","location","reload","catch","updateData","e","target","files","checkFile","reader","FileReader","readAsDataURL","onloadend","setState","cov_picture","className","Row","Col","xs","md","Card","CardHeader","CardBody","Form","onSubmit","noValidate","id","Avatar","alt","src","width","height","Input","invalid","FormFeedback","htmlFor","Photo","onChange","accept","Button","color","onClick","React","Component","connect","auth"],"mappings":"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","file":"static/js/33.3163f835.chunk.js","sourcesContent":["import cogoToast from 'cogo-toast';\r\nimport { MESSAGE_POSITION, HIDE_AFTER_DEFAULT, HIDE_AFTER_LOADING } from '../../../config/Message';\r\n\r\n\r\nclass Message {\r\n\r\n static options = { \r\n                  position: MESSAGE_POSITION,\r\n                  hideAfter: HIDE_AFTER_DEFAULT\r\n              }\r\n static info (message, time) {\r\n    return cogoToast.info(message, Object.assign(Message.options, { hideAfter:time }) )\r\n  }\r\n\r\n  static error (message, time) {\r\n    return cogoToast.error(message, Object.assign(Message.options, { hideAfter:time }) )\r\n  }\r\n\r\n  static success (message, time) {\r\n    return cogoToast.success(message, Object.assign(Message.options, { hideAfter:time }) )\r\n }\r\n\r\n  static loading (message, time) {\r\n    let loadingtime = time || HIDE_AFTER_LOADING\r\n    return cogoToast.loading(message, Object.assign(Message.options, { hideAfter:loadingtime }) )\r\n  }\r\n\r\n  static warn (message, time) {\r\n    return cogoToast.warn(message, Object.assign(Message.options, { hideAfter:time }) )\r\n  }\r\n\r\n}\r\n\r\nexport default Message\r\n","export const MESSAGE_POSITION = 'top-center' //top-left, top-center,top-right,bottom-left,bottom-left,bottom-right\r\nexport const HIDE_AFTER_DEFAULT = 3\r\nexport const HIDE_AFTER_LOADING = 1\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/Capture.4dabfb5a.PNG\";","import React from 'react'\r\nimport { Col, Row, Card, CardHeader, CardBody, Button, FormFeedback, Form, Input } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport UserActions from '../../../store/actions/UserActions'\r\nimport './Picture.css'\r\nimport { SIZE_MAX } from '../../../config/Picture'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Photo from '../../../assets/img/Capture.PNG'\r\nimport Message from '../../Tools/Message/Message'\r\n\r\nclass Picture extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { \r\n      file: '',\r\n      message: '',\r\n      imagePreviewUrl:''\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.sizeMax = 30000000\r\n  }\r\n\r\n  checkFile(file) {\r\n    let { type, size } = file\r\n    var message = \"\"\r\n    var result = true\r\n    if (! type.startsWith(\"image\")) {\r\n      message = \"veuillez choisir une image correcte\"\r\n      result = false\r\n    }\r\n\r\n    else if(parseInt(size) > parseInt(SIZE_MAX)) {\r\n      message = \"taille max de l' image dépassée\"\r\n      result = false\r\n    }\r\n\r\n    return { result: result, message : message}\r\n  }\r\n\r\n  async updateData() {\r\n\r\n    let { dispatch} = this.props;\r\n    let { file } = this.state;\r\n    dispatch(UserActions.uploadPicture(this.props.cov_user.cov_mail, this.state.imagePreviewUrl, file, this.props.token))\r\n      .then(() => { \r\n        window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        Message.error('Mise à jour échouée veuillez réessayer plus tard');\r\n      })\r\n  }\r\n\r\n  handleSubmit() {\r\n    this.updateData()\r\n  }\r\n\r\n\r\n  handleChange(e) {\r\n\r\n    let file = e.target.files[0]\r\n\r\n    let { result, message } = this.checkFile(file)\r\n    if(! result)\r\n      this.setState({ message })\r\n    else\r\n    {\r\n      let reader = new FileReader()\r\n      reader.readAsDataURL(file)\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          file: file,\r\n          message: '',\r\n          imagePreviewUrl: reader.result\r\n        })        \r\n      }\r\n      this.setState({ message: '', file })\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({imagePreviewUrl:''});\r\n    let {cov_user} = this.props;\r\n    if(cov_user.cov_picture){\r\n      this.setState({\r\n        imagePreviewUrl:cov_user.cov_picture\r\n      });\r\n    }\r\n  } \r\n\r\n  render() {  \r\n    let  { message, imagePreviewUrl } = this.state;\r\n    return (\r\n      <div className=\"animated fadeIn profile-picture\">\r\n        <br />\r\n         <Row className=\"justify-content-center center\"> \r\n            <Col xs=\"12\" md=\"4\">\r\n            <Card>\r\n              <CardHeader>\r\n                <strong>Photo</strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <Row className=\"justify-content-center\">\r\n                <Form onSubmit={(e) => this.handleSubmit(e)} noValidate>\r\n                  <Row className=\"justify-content-center\">\r\n                    <p>\r\n                    <strong>Ajouter une photo de profil</strong>\r\n                    </p>\r\n                  </Row>\r\n                  <div id=\"picture-zzone\">\r\n                    <Avatar alt=\"Remy Sharp\" src={imagePreviewUrl} width=\"250\" height=\"250\" />\r\n                  </div>\r\n\r\n                  <Input type=\"hidden\" invalid={message !== \"\"} />\r\n                  <FormFeedback> { message } </FormFeedback>\r\n\r\n                  <div className=\"image-upload\">\r\n                    <label htmlFor=\"file-input\">\r\n                      <img alt=\"alt\" src={Photo} />\r\n                    </label>\r\n                    <input id=\"file-input\" type=\"file\"  onChange={this.handleChange} accept='image/*'/>\r\n                  </div> \r\n                  <Row className=\"justify-content-center\">\r\n                      <div>\r\n                        <Button className=\"profile-btn\" color=\"success\" size=\"md\" onClick={this.handleSubmit}>Valider</Button>\r\n                        <p>\r\n                          &nbsp;\r\n                        </p>\r\n                      </div>\r\n                  </Row>\r\n                  </Form>\r\n                </Row>\r\n              </CardBody>\r\n             </Card>\r\n            </Col>       \r\n          </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cov_user: state.cov_user,\r\n    token: state.auth.token\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Picture)","export const SIZE_MAX = 1000000000"],"sourceRoot":""}