{"version":3,"sources":["views/Tools/Message/Message.js","config/Message.js","views/Login/Login.js"],"names":["Message","message","time","cogoToast","info","Object","assign","options","hideAfter","error","success","loadingtime","loading","warn","position","Login","props","state","cov_mail","cov_password","errorStep","handleChange","bind","handleSubmit","logged","this","gotoAfter","history","push","TRIP_CREATE_PATH","event","target","name","value","setState","preventDefault","dispatch","pathname","check_mail","UserUtils","checkValue","check_password","resultat","UserActions","connectUser","then","response","TRIP_SHOW_DETAIL_PATH","catch","UserApi","handleError","HttpStatus","UNAUTHORIZED","className","md","onSubmit","e","noValidate","addonType","type","placeholder","invalid","onChange","autoComplete","xs","color","href","Component","connect","cov_user","auth"],"mappings":"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","file":"static/js/34.b4b89450.chunk.js","sourcesContent":["import cogoToast from 'cogo-toast';\r\nimport { MESSAGE_POSITION, HIDE_AFTER_DEFAULT, HIDE_AFTER_LOADING } from '../../../config/Message';\r\n\r\n\r\nclass Message {\r\n\r\n static options = { \r\n                  position: MESSAGE_POSITION,\r\n                  hideAfter: HIDE_AFTER_DEFAULT\r\n              }\r\n static info (message, time) {\r\n    return cogoToast.info(message, Object.assign(Message.options, { hideAfter:time }) )\r\n  }\r\n\r\n  static error (message, time) {\r\n    return cogoToast.error(message, Object.assign(Message.options, { hideAfter:time }) )\r\n  }\r\n\r\n  static success (message, time) {\r\n    return cogoToast.success(message, Object.assign(Message.options, { hideAfter:time }) )\r\n }\r\n\r\n  static loading (message, time) {\r\n    let loadingtime = time || HIDE_AFTER_LOADING\r\n    return cogoToast.loading(message, Object.assign(Message.options, { hideAfter:loadingtime }) )\r\n  }\r\n\r\n  static warn (message, time) {\r\n    return cogoToast.warn(message, Object.assign(Message.options, { hideAfter:time }) )\r\n  }\r\n\r\n}\r\n\r\nexport default Message\r\n","export const MESSAGE_POSITION = 'top-center' //top-left, top-center,top-right,bottom-left,bottom-left,bottom-right\r\nexport const HIDE_AFTER_DEFAULT = 3\r\nexport const HIDE_AFTER_LOADING = 1\r\n\r\n","import React, { Component } from 'react';\r\nimport { Button, Card, CardBody, CardHeader, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row, FormFeedback } from 'reactstrap';\r\nimport './Login.css'\r\nimport UserActions from '../../store/actions/UserActions'\r\nimport { connect } from 'react-redux'\r\nimport UserUtils from '../../utils/UserUtils'\r\nimport Message from '../Tools/Message'\r\nimport HttpStatus  from 'http-status-codes';\r\nimport UserApi from '../../api/UserApi';\r\nimport {TRIP_CREATE_PATH, TRIP_SHOW_DETAIL_PATH} from '../../config/paths';\r\nclass Login extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cov_mail: '',\r\n      cov_password: '',\r\n      errorStep: 0,\r\n      message: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let logged = this.props.logged;\r\n    let gotoAfter = this.props.gotoAfter;\r\n\r\n    //when user is logged and want to create trip\r\n    if(logged &&  gotoAfter === 'CREATE_TRIP'){\r\n      this.props.history.push(TRIP_CREATE_PATH);\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const {name, value} = event.target\r\n    this.setState({\r\n      [name]: value\r\n    });    \r\n  }\r\n\r\n  handleSubmit(event){\r\n    event.preventDefault()\r\n    this.setState({errorStep:0})\r\n\r\n    let { cov_mail, cov_password } = this.state\r\n    let { dispatch, pathname} = this.props\r\n\r\n    let check_mail = UserUtils.checkValue('cov_mail', cov_mail)\r\n    let check_password = UserUtils.checkValue('cov_password', cov_password)\r\n\r\n    if ( ! check_mail.resultat) {\r\n      this.setState({errorStep:1, message: check_mail.message})\r\n    }\r\n    else if ( ! check_password.resultat) {\r\n      this.setState({errorStep:2, message: check_password.message})\r\n    }\r\n    else {\r\n         dispatch(UserActions.connectUser(cov_mail, cov_password))\r\n            .then((response) => {\r\n                if(this.props.gotoAfter === 'CREATE_TRIP'){\r\n                  this.props.history.push(TRIP_CREATE_PATH);\r\n                }else if(this.props.gotoAfter === 'BOOK_TRIP'){\r\n                  this.props.history.push(TRIP_SHOW_DETAIL_PATH);\r\n                }else{\r\n                  this.props.history.push(pathname);\r\n                }\r\n            })\r\n          .catch(error => {\r\n            let codeError = UserApi.handleError(error)\r\n             switch(codeError) {\r\n               case HttpStatus.UNAUTHORIZED:\r\n                 Message.error('Email et/ou mot de passe incorrecte(s) vérifier les de nouveau ou faites mot de passe oublié pour réinitialiser votre mot de passe',4);\r\n                 break;\r\n               default:\r\n                  Message.error('Connexion impossible veuillez réessayer plus tard');\r\n                }         \r\n               \r\n            });\r\n  }\r\n  }\r\n\r\n  render() {\r\n    let {  message, errorStep, cov_mail, cov_password } = this.state\r\n    return (\r\n      <div className=\"login\">\r\n      <Container> \r\n        <br />\r\n        <br />\r\n        <br />\r\n        \r\n      <Row className=\"justify-content-center\" >\r\n       \r\n          <Col md=\"5\">\r\n                <Card>\r\n                <CardHeader>\r\n                <i className=\"fa fa-align-justify\"></i><strong>Connexion</strong>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Form onSubmit={ (e) => this.handleSubmit(e) } noValidate>\r\n                      <InputGroup className=\"mb-3\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                        <i className=\"icon-user\"></i>\r\n                        </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input \r\n                          type=\"text\" \r\n                          placeholder=\"email\" \r\n                          value={cov_mail} \r\n                          name=\"cov_mail\" \r\n                          invalid={ errorStep === 1 } \r\n                          onChange={this.handleChange} \r\n                          autoComplete=\"email\"\r\n                      />\r\n                      <FormFeedback> {message} </FormFeedback>\r\n                      </InputGroup>\r\n                      <InputGroup className=\"mb-4\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                        <i className=\"icon-lock\"></i>\r\n                        </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input \r\n                          type=\"password\" \r\n                          placeholder=\"mot de passe\" \r\n                          value={cov_password} \r\n                          name=\"cov_password\" \r\n                          invalid={errorStep === 2} \r\n                          onChange={this.handleChange} \r\n                          autoComplete=\"password\"\r\n                      />\r\n                      <FormFeedback> {message} </FormFeedback>\r\n                      </InputGroup>\r\n                      <Row className=\"justify-content-center\">\r\n                      <Col xs=\"5\">\r\n                        <Button color=\"primary\" className=\"px-4\">connexion</Button>\r\n                      </Col>\r\n                      <Col xs=\"7\" className=\"text-right\">\r\n                        <a color=\"link\" href=\"/#/profile/password/forgot\">Mot de passe oublié</a>\r\n                      </Col>\r\n                      </Row>\r\n                    </Form>\r\n                </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      cov_user: state.cov_user,\r\n      pathname: state.pathname,\r\n      logged: state.auth.logged\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps)(Login)\r\n"],"sourceRoot":""}