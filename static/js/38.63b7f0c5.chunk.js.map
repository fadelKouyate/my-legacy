{"version":3,"sources":["views/Profile/Password/Forgot/Forgot.js"],"names":["ForgotPassword","props","state","cov_mail","error","message","modal","handleChange","bind","handleSubmit","handleToogle","goHome","event","target","name","value","this","setState","preventDefault","dispatch","check_mail","UserUtils","checkValue","resultat","UserActions","forgotPassword","history","push","className","md","onSubmit","e","noValidate","addonType","type","placeholder","invalid","onChange","autoComplete","xs","onClick","color","isOpen","Component","connect","cov_user"],"mappings":"mZAOMA,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,OAAO,EACPC,QAAS,GACTC,OAAO,GAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,OAAS,EAAKA,OAAOH,KAAZ,gBAXG,E,yDAcNI,GAAQ,IAAD,EACMA,EAAMC,OAAtBC,EADU,EACVA,KAAMC,EADI,EACJA,MACdC,KAAKC,SAAL,eACGH,EAAOC,M,mCAICH,GACXA,EAAMM,iBACNF,KAAKC,SAAS,CAAEb,OAAO,IAFL,IAIZD,EAAaa,KAAKd,MAAlBC,SACAgB,EAAaH,KAAKf,MAAlBkB,SAEFC,EAAaC,IAAUC,WAAW,WAAYnB,GAC7CiB,EAAWG,UAIdJ,EAASK,IAAYC,eAAetB,IAOlCa,KAAKN,gBAVPM,KAAKC,SAAS,CAAEb,OAAO,EAAMC,QAASe,EAAWf,Y,qCAgBnDW,KAAKC,SAAS,CAAEX,OAAQU,KAAKd,MAAMI,U,+BAInCU,KAAKf,MAAMyB,QAAQC,KAAK,O,+BAGhB,IAAD,SAC4BX,KAAKd,MAAlCG,EADC,EACDA,QAASD,EADR,EACQA,MAAOD,EADf,EACeA,SACtB,OACE,yBAAKyB,UAAU,2BACb,kBAAC,IAAD,KACE,6BACA,6BACA,6BACA,kBAAC,IAAD,CAAKA,UAAU,0BAEb,kBAAC,IAAD,CAAKC,GAAG,KACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGD,UAAU,wBAA0B,wEAEzC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAME,SAAU,SAACC,GAAD,OAAO,EAAKtB,aAAasB,IAAIC,YAAU,GACrD,kBAAC,IAAD,CAAYJ,UAAU,QACpB,kBAAC,IAAD,CAAiBK,UAAU,WACzB,kBAAC,IAAD,KACE,uBAAGL,UAAU,gBAGjB,kBAAC,IAAD,CACEM,KAAK,OACLC,YAAY,yBACZpB,MAAOZ,EACPW,KAAK,WACLsB,QAAShC,EACTiC,SAAUrB,KAAKT,aACf+B,aAAa,UAEf,kBAAC,IAAD,SAAgBjC,EAAhB,MAGF,kBAAC,IAAD,CAAKuB,UAAU,0BACb,kBAAC,IAAD,CAAKW,GAAG,KACN,kBAAC,IAAD,CAAQC,QAASxB,KAAKP,aAAcgC,MAAM,UAAUb,UAAU,QAA9D,WACE,kBAAC,IAAD,CAAOc,OAAQ1B,KAAKd,MAAMI,MAAOsB,UAAWZ,KAAKf,MAAM2B,WACrD,kBAAC,IAAD,mCACA,kBAAC,IAAD,4EAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQa,MAAM,UAAUb,UAAU,OAAOY,QAASxB,KAAKL,QAAvD,MAA2E,mB,GAnG5EgC,aAyHdC,uBANS,SAAC1C,GACvB,MAAO,CACL2C,SAAU3C,EAAM2C,YAILD,CAAyB5C","file":"static/js/38.63b7f0c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button, Card, CardBody, CardHeader, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row, FormFeedback } from 'reactstrap';\r\nimport './Forgot.css'\r\nimport UserActions from '../../../../store/actions/UserActions'\r\nimport { connect } from 'react-redux'\r\nimport UserUtils from '../../../../utils/UserUtils'\r\n\r\nclass ForgotPassword extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cov_mail: '',\r\n      error: false,\r\n      message: '',\r\n      modal: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.handleToogle = this.handleToogle.bind(this)\r\n    this.goHome = this.goHome.bind(this)\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    this.setState({ error: false })\r\n\r\n    let { cov_mail } = this.state\r\n    let { dispatch } = this.props\r\n\r\n    let check_mail = UserUtils.checkValue('cov_mail', cov_mail)\r\n    if (!check_mail.resultat) {\r\n      this.setState({ error: true, message: check_mail.message })\r\n    }\r\n    else {\r\n      dispatch(UserActions.forgotPassword(cov_mail))\r\n       /* .then((response) => {\r\n          this.props.history.push(\"/\")\r\n        })\r\n        .catch(error => {\r\n          this.setState({ error: true, message: 'Impossible de réinitialiser le mot de passe' })\r\n        });*/\r\n        this.handleToogle()\r\n    }\r\n\r\n  }\r\n\r\n  handleToogle() {\r\n    this.setState({ modal: !this.state.modal });\r\n  }\r\n\r\n  goHome() {\r\n    this.props.history.push(\"/\")\r\n  }\r\n\r\n  render() {\r\n    let { message, error, cov_mail } = this.state\r\n    return (\r\n      <div className=\"profile-forgot-password\">\r\n        <Container>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Row className=\"justify-content-center\" >\r\n\r\n            <Col md=\"5\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <i className=\"fa fa-align-justify\"></i><strong>Réinitialisation du mot de passe</strong>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form onSubmit={(e) => this.handleSubmit(e)} noValidate>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                          <i className=\"icon-user\"></i>\r\n                        </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"Saisir l'adresse email\"\r\n                        value={cov_mail}\r\n                        name=\"cov_mail\"\r\n                        invalid={error}\r\n                        onChange={this.handleChange}\r\n                        autoComplete=\"email\"\r\n                      />\r\n                      <FormFeedback> {message} </FormFeedback>\r\n                    </InputGroup>\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col xs=\"4\">\r\n                        <Button onClick={this.handleSubmit} color=\"primary\" className=\"px-4\">valider</Button>\r\n                          <Modal isOpen={this.state.modal} className={this.props.className}>\r\n                            <ModalHeader>Changement de mot de passe</ModalHeader>\r\n                            <ModalBody>\r\n                              Vous allez recevoir un e-mail pour réinitialiser le mot de passe\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                              <Button color=\"primary\" className=\"px-4\" onClick={this.goHome}>OK</Button>{' '}\r\n                            </ModalFooter>\r\n                          </Modal>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cov_user: state.cov_user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ForgotPassword)\r\n"],"sourceRoot":""}